apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

kapt {
    generateStubs = true
}


android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.mibaldi.cah"
        minSdkVersion 19
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    compileOptions {
    }
}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation "org.jetbrains.anko:anko:$anko_version"
    implementation "org.jetbrains.anko:anko-appcompat-v7-commons:$anko_version"
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support:support-compat:26.1.0'
    implementation 'com.android.support:design:26.1.0'
    implementation "org.jetbrains.anko:anko-design:$anko_version"
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    // Firebase
    implementation "com.google.firebase:firebase-core:$firebase_version"
    implementation "com.google.firebase:firebase-database:$firebase_version"
    // Dagger dependencies
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    // if you use the support libraries
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    //architecture components
    implementation 'android.arch.lifecycle:extensions:1.0.0'
    // Unit Testing
    testCompile 'com.nhaarman:mockito-kotlin:1.4.0'
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.7.21'
    //testing
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    testImplementation 'android.arch.core:core-testing:1.0.0'
}
kotlin {
    experimental {
        coroutines "enable"
    }
}

apply plugin: 'com.google.gms.google-services'
